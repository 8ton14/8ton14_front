{"ast":null,"code":"var _jsxFileName = \"D:\\\\webdev\\\\8ton14_front\\\\pages\\\\community\\\\[id].js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Router from 'next/router';\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GET_POST_REQUEST } from '../../reducers/post/postAction';\nimport { Form, Button } from 'react-bootstrap';\nimport { POST_COMMENT_REQUEST } from '../../reducers/comment/commentAction';\n\nconst Detail = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    0: comment,\n    1: setComment\n  } = useState('');\n  const {\n    post\n  } = useSelector(state => state.post);\n  const {\n    isSuccess\n  } = useDispatch(state => state.comment);\n  useEffect(() => {\n    dispatch({\n      type: GET_POST_REQUEST,\n      data: {\n        postId: router.query.id\n      }\n    });\n  }, []);\n  useEffect(() => {\n    if (isSuccess) {\n      Router.push('/');\n    }\n  }, [isSuccess]);\n\n  const onChangeComment = e => {\n    setComment(e.target.value);\n  };\n\n  const onSubmitComment = e => {\n    e.preventDefault();\n    dispatch({\n      type: POST_COMMENT_REQUEST,\n      data: {\n        postId: router.query.id,\n        content: comment\n      }\n    });\n  };\n\n  return __jsx(React.Fragment, null, post ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, post.title), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, post.content), post.tags && post.tags.map(item => {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, item);\n  }), post.comments && post.comments.map(item => {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, item.content), __jsx(\"div\", {\n      className: \"like\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"\\uC88B\\uC544\\uC694 \\uC218 : \", item.likes));\n  })) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"404 not found \"), __jsx(Form, {\n    onSubmit: onSubmitComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    controlId: \"exampleForm.ControlTextarea1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"\\uB0B4\\uC6A9\"), __jsx(Form.Control, {\n    as: \"textarea\",\n    rows: \"5\",\n    value: comment,\n    onChange: onChangeComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), __jsx(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"\\uB313\\uAE00\\uC791\\uC131\")));\n};\n\nexport default Detail;","map":{"version":3,"sources":["D:/webdev/8ton14_front/pages/community/[id].js"],"names":["React","useEffect","useState","Router","useRouter","useDispatch","useSelector","GET_POST_REQUEST","Form","Button","POST_COMMENT_REQUEST","Detail","router","dispatch","comment","setComment","post","state","isSuccess","type","data","postId","query","id","push","onChangeComment","e","target","value","onSubmitComment","preventDefault","content","title","tags","map","item","comments","likes"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Router from 'next/router'\r\nimport { useRouter } from 'next/router'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { GET_POST_REQUEST } from '../../reducers/post/postAction'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { POST_COMMENT_REQUEST } from '../../reducers/comment/commentAction'\r\n\r\nconst Detail = () => {\r\n    const router = useRouter()\r\n    const dispatch = useDispatch()\r\n    const [comment, setComment] = useState('')\r\n    const { post } = useSelector(state => state.post)\r\n    const { isSuccess } = useDispatch(state => state.comment)\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: GET_POST_REQUEST,\r\n            data: {\r\n                postId: router.query.id\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (isSuccess) {\r\n            Router.push('/')\r\n        }\r\n    }, [isSuccess])\r\n\r\n\r\n\r\n    const onChangeComment = (e) => {\r\n        setComment(e.target.value)\r\n    }\r\n\r\n    const onSubmitComment = (e) => {\r\n        e.preventDefault()\r\n        dispatch({\r\n            type: POST_COMMENT_REQUEST,\r\n            data: {\r\n                postId: router.query.id,\r\n                content: comment\r\n            }\r\n        }\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                post\r\n                    ?\r\n                    <>\r\n                        <div className=\"title\">{post.title}</div>\r\n                        <div>{post.content}</div>\r\n                        {post.tags && post.tags.map(item => {\r\n                            return (<div>{item}</div>)\r\n                        })}\r\n                        {post.comments && post.comments.map(item => {\r\n                            return (\r\n                                <>\r\n                                    <div className=\"comment\">{item.content}</div>\r\n                                    <div className=\"like\">좋아요 수 : {item.likes}</div>\r\n                                </>\r\n                            )\r\n                        })}\r\n                    </>\r\n                    :\r\n                    <div>404 not found </div>\r\n            }\r\n\r\n            <Form onSubmit={onSubmitComment}>\r\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                    <Form.Label>내용</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows=\"5\" value={comment} onChange={onChangeComment} />\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\">댓글작성</Button>\r\n            </Form>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Detail"]},"metadata":{},"sourceType":"module"}