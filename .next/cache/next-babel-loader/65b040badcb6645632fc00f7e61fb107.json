{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport { fork, all, takeLatest, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { POST_POSTS_FAILURE, POST_POSTS_SUCCESS, GET_POSTS_REQUEST, GET_POSTS_SUCCESS, GET_POSTS_FAILURE, POST_POSTS_REQUEST, GET_POST_SUCCESS, GET_POST_FAILURE, GET_POST_REQUEST } from '../reducers/post/postAction';\n\nfunction postingAPI(data) {\n  return axios.post('https://stopgomin-backend.herokuapp.com/api/writePost', _JSON$stringify(data));\n}\n\nfunction* posting(action) {\n  try {\n    const result = yield call(postingAPI, action.data); //api\n\n    yield put({\n      type: POST_POSTS_SUCCESS,\n      data: result\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: POST_POSTS_FAILURE,\n      data: e\n    });\n  }\n}\n\nfunction* watchPosting() {\n  yield takeLatest(POST_POSTS_REQUEST, posting);\n}\n\nconst dummy = [{\n  \"id\": 1,\n  \"title\": \"친구 생일선물로 지갑 어떤가요?\",\n  \"content\": \"친구 생일선물로 40만원짜리 지갑 선물해려하는데요.\\r\\n남자 지갑 브랜드 추천해주세요\",\n  \"tags\": [\"20대\", \"남자\", \"지갑\", \"친구\", \"생일\"]\n}, {\n  \"id\": 2,\n  \"title\": \"취업기념 부모님 선물\",\n  \"content\": \"이번에 취업해서 첫월급을 받았습니다. 첫월급인만큼 부모님께 통크게 선물하나 해드릴까하는데요.\\r\\n200만원짜리 안마의자가 좋을까요? 아니면 다른 추천하시는게 있나요?\",\n  \"tags\": [\"부모님\", \" 취업\", \" 선물\", \" 안마의자\"]\n}];\n\nfunction getPostAPI() {\n  return axios.get('https://stopgomin-backend.herokuapp.com/api/getPosts');\n}\n\nfunction* getPostList() {\n  try {\n    const result = yield call(getPostAPI); //api\n\n    yield put({\n      type: GET_POSTS_SUCCESS,\n      data: result\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: GET_POSTS_FAILURE,\n      data: e\n    });\n  }\n}\n\nfunction* watchGetPostList() {\n  yield takeLatest(GET_POSTS_REQUEST, getPostList);\n}\n\nfunction getPostapi(data) {\n  return axios.post('https://stopgomin-backend.herokuapp.com/api/getPost', _JSON$stringify(data));\n}\n\nfunction* getPost(action) {\n  try {\n    const result = yield call(getPostapi, _JSON$stringify(acion.data)); //api\n\n    yield put({\n      type: GET_POST_SUCCESS,\n      data: result\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: GET_POST_FAILURE,\n      data: e\n    });\n  }\n}\n\nfunction* watchGetPost() {\n  yield takeLatest(GET_POST_REQUEST, getPost);\n}\n\nexport default function* rootPost() {\n  yield all([fork(watchPosting), fork(watchGetPostList), fork(watchGetPost)]);\n}","map":{"version":3,"sources":["D:/webdev/8ton14_front/sagas/post.js"],"names":["fork","all","takeLatest","call","put","axios","POST_POSTS_FAILURE","POST_POSTS_SUCCESS","GET_POSTS_REQUEST","GET_POSTS_SUCCESS","GET_POSTS_FAILURE","POST_POSTS_REQUEST","GET_POST_SUCCESS","GET_POST_FAILURE","GET_POST_REQUEST","postingAPI","data","post","posting","action","result","type","e","console","error","watchPosting","dummy","getPostAPI","get","getPostList","watchGetPostList","getPostapi","getPost","acion","watchGetPost","rootPost"],"mappings":"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","sourcesContent":["import { fork, all, takeLatest, call, put } from 'redux-saga/effects'\r\nimport axios from 'axios'\r\n\r\nimport { POST_POSTS_FAILURE, POST_POSTS_SUCCESS, GET_POSTS_REQUEST, GET_POSTS_SUCCESS, GET_POSTS_FAILURE, POST_POSTS_REQUEST, GET_POST_SUCCESS, GET_POST_FAILURE, GET_POST_REQUEST } from '../reducers/post/postAction'\r\n\r\nfunction postingAPI(data) {\r\n    return axios.post('https://stopgomin-backend.herokuapp.com/api/writePost', JSON.stringify(data))\r\n}\r\n\r\n\r\nfunction* posting(action) {\r\n    try {\r\n        const result = yield call(postingAPI, action.data) //api\r\n        yield put({\r\n            type: POST_POSTS_SUCCESS,\r\n            data: result\r\n        })\r\n    } catch (e) {\r\n        console.error(e)\r\n        yield put({\r\n            type: POST_POSTS_FAILURE,\r\n            data: e\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchPosting() {\r\n    yield takeLatest(POST_POSTS_REQUEST, posting)\r\n}\r\n\r\nconst dummy = [\r\n    {\r\n        \"id\": 1,\r\n        \"title\": \"친구 생일선물로 지갑 어떤가요?\",\r\n        \"content\": \"친구 생일선물로 40만원짜리 지갑 선물해려하는데요.\\r\\n남자 지갑 브랜드 추천해주세요\",\r\n        \"tags\": [\r\n            \"20대\",\r\n            \"남자\",\r\n            \"지갑\",\r\n            \"친구\",\r\n            \"생일\"\r\n        ]\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"title\": \"취업기념 부모님 선물\",\r\n        \"content\": \"이번에 취업해서 첫월급을 받았습니다. 첫월급인만큼 부모님께 통크게 선물하나 해드릴까하는데요.\\r\\n200만원짜리 안마의자가 좋을까요? 아니면 다른 추천하시는게 있나요?\",\r\n        \"tags\": [\r\n            \"부모님\",\r\n            \" 취업\",\r\n            \" 선물\",\r\n            \" 안마의자\"\r\n        ]\r\n    }\r\n]\r\n\r\nfunction getPostAPI() {\r\n    return axios.get('https://stopgomin-backend.herokuapp.com/api/getPosts')\r\n}\r\n\r\nfunction* getPostList() {\r\n    try {\r\n        const result = yield call(getPostAPI) //api\r\n        yield put({\r\n            type: GET_POSTS_SUCCESS,\r\n            data: result\r\n        })\r\n    } catch (e) {\r\n        console.error(e)\r\n        yield put({\r\n            type: GET_POSTS_FAILURE,\r\n            data: e\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchGetPostList() {\r\n    yield takeLatest(GET_POSTS_REQUEST, getPostList)\r\n}\r\n\r\nfunction getPostapi(data) {\r\n    return axios.post('https://stopgomin-backend.herokuapp.com/api/getPost', JSON.stringify(data))\r\n}\r\n\r\nfunction* getPost(action) {\r\n    try {\r\n        const result = yield call(getPostapi, JSON.stringify(acion.data)) //api\r\n        yield put({\r\n            type: GET_POST_SUCCESS,\r\n            data: result\r\n        })\r\n\r\n    } catch (e) {\r\n        console.error(e)\r\n        yield put({\r\n            type: GET_POST_FAILURE,\r\n            data: e\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchGetPost() {\r\n    yield takeLatest(GET_POST_REQUEST, getPost)\r\n}\r\n\r\nexport default function* rootPost() {\r\n    yield all([\r\n        fork(watchPosting),\r\n        fork(watchGetPostList),\r\n        fork(watchGetPost)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}