{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seeke\\\\8ton14_front\\\\pages\\\\write.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport '../pages/index.scss';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Card, Navbar, Nav, NavDropdown, Form, FormControl } from 'react-bootstrap';\nimport { GET_POSTS_REQUEST, POST_POSTS_REQUEST } from '../reducers/post/postAction'; // import Card from '../Function/card'\n\nfunction getHashTags(inputText) {\n  var regex = /(?:^|\\s)(?:#)([a-zA-Z가-힣\\d]+)/gm;\n  var matches = [];\n  var match;\n\n  while (match = regex.exec(inputText)) {\n    matches.push(match[1]);\n  }\n\n  return matches;\n}\n\nvar write = function write() {\n  var _useState = useState(''),\n      title = _useState[0],\n      setTitle = _useState[1];\n\n  var _useState2 = useState(''),\n      content = _useState2[0],\n      setContent = _useState2[1];\n\n  var _useState3 = useState(''),\n      rawTags = _useState3[0],\n      setRawTags = _useState3[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      post_success = _useSelector.post_success;\n\n  useEffect(function () {\n    if (post_success) {\n      Router.push('/community');\n    }\n  }, [post_success]);\n  var dispatch = useDispatch();\n\n  var onChangeTitle = function onChangeTitle(e) {\n    setTitle(e.target.value);\n  };\n\n  var onChangeRawTags = function onChangeRawTags(e) {\n    setRawTags(e.target.value);\n  };\n\n  var onSubmitForm = function onSubmitForm(e) {\n    e.preventDefault();\n    var tags = getHashTags(rawTags);\n\n    if (tags) {\n      dispatch({\n        type: POST_POSTS_REQUEST,\n        data: {\n          title: title,\n          content: content,\n          tags: tags\n        }\n      });\n    }\n  };\n\n  var onChangeConent = function onChangeConent(e) {\n    setContent(e.target.value);\n  };\n\n  return __jsx(Form, {\n    onSubmit: onSubmitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    controlId: \"exampleForm.ControlInput1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"\\uC81C\\uBAA9\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"ex)40\\uB300 \\uC544\\uBC84\\uC9C0 \\uC0DD\\uC2E0\\uC120\\uBB3C\",\n    value: title,\n    onChange: onChangeTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), __jsx(Form.Group, {\n    controlId: \"exampleForm.ControlInput1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"#\\uD0DC\\uADF8\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"ex)#20\\uB300, #\\uB300\\uD559\\uC0DD, #\\uC5EC\\uC131, #\\uC0DD\\uC77C\",\n    value: rawTags,\n    onChange: onChangeRawTags,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), __jsx(Form.Group, {\n    controlId: \"exampleForm.ControlTextarea1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"\\uB0B4\\uC6A9\"), __jsx(Form.Control, {\n    as: \"textarea\",\n    rows: \"5\",\n    value: content,\n    onChange: onChangeConent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), __jsx(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"\\uC791\\uC131\"));\n};\n\nexport default write;","map":{"version":3,"sources":["C:/Users/seeke/8ton14_front/pages/write.js"],"names":["React","useEffect","useState","Link","Router","useDispatch","useSelector","Button","Card","Navbar","Nav","NavDropdown","Form","FormControl","GET_POSTS_REQUEST","POST_POSTS_REQUEST","getHashTags","inputText","regex","matches","match","exec","push","write","title","setTitle","content","setContent","rawTags","setRawTags","state","post","post_success","dispatch","onChangeTitle","e","target","value","onChangeRawTags","onSubmitForm","preventDefault","tags","type","data","onChangeConent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport '../pages/index.scss'\r\nimport Link from 'next/link'\r\nimport Router from 'next/router'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button, Card, Navbar, Nav, NavDropdown, Form, FormControl } from 'react-bootstrap'\r\nimport { GET_POSTS_REQUEST, POST_POSTS_REQUEST } from '../reducers/post/postAction'\r\n// import Card from '../Function/card'\r\n\r\n\r\nfunction getHashTags(inputText) {\r\n    var regex = /(?:^|\\s)(?:#)([a-zA-Z가-힣\\d]+)/gm;\r\n    var matches = [];\r\n    var match;\r\n\r\n    while ((match = regex.exec(inputText))) {\r\n        matches.push(match[1]);\r\n    }\r\n\r\n    return matches;\r\n}\r\n\r\nconst write = () => {\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [content, setContent] = useState('')\r\n    const [rawTags, setRawTags] = useState('')\r\n\r\n    const { post_success } = useSelector(state => state.post)\r\n\r\n    useEffect(() => {\r\n        if (post_success) {\r\n            Router.push('/community')\r\n        }\r\n    }, [post_success])\r\n    const dispatch = useDispatch()\r\n\r\n    const onChangeTitle = (e) => {\r\n        setTitle(e.target.value)\r\n    }\r\n\r\n    const onChangeRawTags = (e) => {\r\n        setRawTags(e.target.value)\r\n    }\r\n\r\n    const onSubmitForm = (e) => {\r\n        e.preventDefault()\r\n        const tags = getHashTags(rawTags)\r\n        if (tags) {\r\n            dispatch({\r\n                type: POST_POSTS_REQUEST,\r\n                data: {\r\n                    title,\r\n                    content,\r\n                    tags\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const onChangeConent = (e) => {\r\n        setContent(e.target.value)\r\n    }\r\n    return (\r\n        <Form onSubmit={onSubmitForm}>\r\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                <Form.Label>제목</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"ex)40대 아버지 생신선물\" value={title} onChange={onChangeTitle} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                <Form.Label>#태그</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"ex)#20대, #대학생, #여성, #생일\" value={rawTags} onChange={onChangeRawTags} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                <Form.Label>내용</Form.Label>\r\n                <Form.Control as=\"textarea\" rows=\"5\" value={content} onChange={onChangeConent} />\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\">작성</Button>\r\n        </Form >\r\n    )\r\n}\r\n\r\nexport default write;"]},"metadata":{},"sourceType":"module"}