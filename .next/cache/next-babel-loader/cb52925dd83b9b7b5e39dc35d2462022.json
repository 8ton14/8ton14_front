{"ast":null,"code":"import { fork, all, takeLatest, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport '../reducers/post/postAction';\nimport { POST_RECOMMEND_PRODUCT_REQUEST, POST_RECOMMEND_PRODUCT_FAILURE, POST_RECOMMEND_PRODUCT_SUCCESS } from '../reducers/product/productAction';\nimport { POST_COMMENT_FAILURE } from '../reducers/comment/commentAction';\n\nfunction recommendAPI() {}\n\nfunction* commenting() {\n  try {\n    const result = false; //api\n\n    put({\n      type: POST_COMMENT_SUCCESS,\n      data: result\n    });\n  } catch (e) {\n    console.error(e);\n    put({\n      type: POST_COMMENT_FAILURE,\n      data: e\n    });\n  }\n}\n\nfunction* watchCommenting() {\n  yield takeLatest(POST_COMMENT_REQUEST, commenting);\n}\n\nexport default function* rootComment() {\n  yield all([watchCommenting]);\n}","map":{"version":3,"sources":["C:/Users/seeke/8ton14_front/sagas/comment.js"],"names":["fork","all","takeLatest","call","put","axios","POST_RECOMMEND_PRODUCT_REQUEST","POST_RECOMMEND_PRODUCT_FAILURE","POST_RECOMMEND_PRODUCT_SUCCESS","POST_COMMENT_FAILURE","recommendAPI","commenting","result","type","POST_COMMENT_SUCCESS","data","e","console","error","watchCommenting","POST_COMMENT_REQUEST","rootComment"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,GAAtC,QAAiD,oBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAgB,6BAAhB;AACA,SAASC,8BAAT,EAAyCC,8BAAzC,EAAyEC,8BAAzE,QAA+G,mCAA/G;AACA,SAASC,oBAAT,QAAqC,mCAArC;;AAGA,SAASC,YAAT,GAAwB,CAEvB;;AAED,UAAUC,UAAV,GAAuB;AACnB,MAAI;AACA,UAAMC,MAAM,GAAG,KAAf,CADA,CACqB;;AACrBR,IAAAA,GAAG,CAAC;AACAS,MAAAA,IAAI,EAAEC,oBADN;AAEAC,MAAAA,IAAI,EAAEH;AAFN,KAAD,CAAH;AAIH,GAND,CAME,OAAOI,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACAZ,IAAAA,GAAG,CAAC;AACAS,MAAAA,IAAI,EAAEJ,oBADN;AAEAM,MAAAA,IAAI,EAAEC;AAFN,KAAD,CAAH;AAIH;AACJ;;AAED,UAAUG,eAAV,GAA4B;AACxB,QAAMjB,UAAU,CAACkB,oBAAD,EAAuBT,UAAvB,CAAhB;AACH;;AAED,eAAe,UAAUU,WAAV,GAAwB;AACnC,QAAMpB,GAAG,CAAC,CACNkB,eADM,CAAD,CAAT;AAGH","sourcesContent":["import { fork, all, takeLatest, call, put } from 'redux-saga/effects'\r\nimport axios from 'axios'\r\n\r\nimport { } from '../reducers/post/postAction'\r\nimport { POST_RECOMMEND_PRODUCT_REQUEST, POST_RECOMMEND_PRODUCT_FAILURE, POST_RECOMMEND_PRODUCT_SUCCESS } from '../reducers/product/productAction'\r\nimport { POST_COMMENT_FAILURE } from '../reducers/comment/commentAction'\r\n\r\n\r\nfunction recommendAPI() {\r\n\r\n}\r\n\r\nfunction* commenting() {\r\n    try {\r\n        const result = false //api\r\n        put({\r\n            type: POST_COMMENT_SUCCESS,\r\n            data: result\r\n        })\r\n    } catch (e) {\r\n        console.error(e)\r\n        put({\r\n            type: POST_COMMENT_FAILURE,\r\n            data: e\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchCommenting() {\r\n    yield takeLatest(POST_COMMENT_REQUEST, commenting)\r\n}\r\n\r\nexport default function* rootComment() {\r\n    yield all([\r\n        watchCommenting,\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}