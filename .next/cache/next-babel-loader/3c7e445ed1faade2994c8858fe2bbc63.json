{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(posting),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchPosting),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getPostList),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchGetPostList),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootPost);\n\nimport { fork, all, takeLatest, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { POST_POSTS_FAILURE, POST_POSTS_SUCCESS, GET_POSTS_REQUEST, GET_POSTS_SUCCESS, GET_POSTS_FAILURE, POST_POSTS_REQUEST } from '../reducers/post/postAction';\n\nfunction posting() {\n  var result;\n  return _regeneratorRuntime.wrap(function posting$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          result = false; //api\n\n          _context.next = 4;\n          return put({\n            type: POST_POSTS_SUCCESS,\n            data: result\n          });\n\n        case 4:\n          _context.next = 11;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 11;\n          return put({\n            type: POST_POSTS_FAILURE,\n            data: _context.t0\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 6]]);\n}\n\nfunction watchPosting() {\n  return _regeneratorRuntime.wrap(function watchPosting$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(POST_POSTS_REQUEST, posting);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nvar dummy = [{\n  \"id\": 1,\n  \"title\": \"친구 생일선물로 지갑 어떤가요?\",\n  \"content\": \"친구 생일선물로 40만원짜리 지갑 선물해려하는데요.\\r\\n남자 지갑 브랜드 추천해주세요\",\n  \"tags\": [\"20대\", \"남자\", \"지갑\", \"친구\", \"생일\"]\n}, {\n  \"id\": 2,\n  \"title\": \"취업기념 부모님 선물\",\n  \"content\": \"이번에 취업해서 첫월급을 받았습니다. 첫월급인만큼 부모님께 통크게 선물하나 해드릴까하는데요.\\r\\n200만원짜리 안마의자가 좋을까요? 아니면 다른 추천하시는게 있나요?\",\n  \"tags\": [\"부모님\", \" 취업\", \" 선물\", \" 안마의자\"]\n}];\n\nfunction getPostList() {\n  var result;\n  return _regeneratorRuntime.wrap(function getPostList$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          result = false; //api\n\n          _context3.next = 4;\n          return put({\n            type: GET_POSTS_SUCCESS,\n            data: dummy\n          });\n\n        case 4:\n          _context3.next = 11;\n          break;\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 11;\n          return put({\n            type: GET_POSTS_FAILURE,\n            data: _context3.t0\n          });\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 6]]);\n}\n\nfunction watchGetPostList() {\n  return _regeneratorRuntime.wrap(function watchGetPostList$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(GET_POSTS_REQUEST, getPostList);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default function rootPost() {\n  return _regeneratorRuntime.wrap(function rootPost$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(watchPosting), fork(watchGetPostList)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["D:/webdev/8ton14_front/sagas/post.js"],"names":["posting","watchPosting","getPostList","watchGetPostList","rootPost","fork","all","takeLatest","call","put","axios","POST_POSTS_FAILURE","POST_POSTS_SUCCESS","GET_POSTS_REQUEST","GET_POSTS_SUCCESS","GET_POSTS_FAILURE","POST_POSTS_REQUEST","result","type","data","console","error","dummy"],"mappings":";;;;yBAMUA,O;;;yBAgBAC,Y;;;yBA8BAC,W;;;yBAgBAC,gB;;;yBAIeC,Q;;AAxEzB,SAASC,IAAT,EAAeC,GAAf,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,GAAtC,QAAiD,oBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,kBAAT,EAA6BC,kBAA7B,EAAiDC,iBAAjD,EAAoEC,iBAApE,EAAuFC,iBAAvF,EAA0GC,kBAA1G,QAAoI,6BAApI;;AAGA,SAAUhB,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEciB,UAAAA,MAFd,GAEuB,KAFvB,EAE6B;;AAF7B;AAGQ,iBAAMR,GAAG,CAAC;AACNS,YAAAA,IAAI,EAAEN,kBADA;AAENO,YAAAA,IAAI,EAAEF;AAFA,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQQG,UAAAA,OAAO,CAACC,KAAR;AARR;AASQ,iBAAMZ,GAAG,CAAC;AACNS,YAAAA,IAAI,EAAEP,kBADA;AAENQ,YAAAA,IAAI;AAFE,WAAD,CAAT;;AATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAAUlB,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMM,UAAU,CAACS,kBAAD,EAAqBhB,OAArB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,IAAMsB,KAAK,GAAG,CACV;AACI,QAAM,CADV;AAEI,WAAS,mBAFb;AAGI,aAAW,kDAHf;AAII,UAAQ,CACJ,KADI,EAEJ,IAFI,EAGJ,IAHI,EAIJ,IAJI,EAKJ,IALI;AAJZ,CADU,EAaV;AACI,QAAM,CADV;AAEI,WAAS,aAFb;AAGI,aAAW,+FAHf;AAII,UAAQ,CACJ,KADI,EAEJ,KAFI,EAGJ,KAHI,EAIJ,OAJI;AAJZ,CAbU,CAAd;;AA0BA,SAAUpB,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEce,UAAAA,MAFd,GAEuB,KAFvB,EAE6B;;AAF7B;AAGQ,iBAAMR,GAAG,CAAC;AACNS,YAAAA,IAAI,EAAEJ,iBADA;AAENK,YAAAA,IAAI,EAAEG;AAFA,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQQF,UAAAA,OAAO,CAACC,KAAR;AARR;AASQ,iBAAMZ,GAAG,CAAC;AACNS,YAAAA,IAAI,EAAEH,iBADA;AAENI,YAAAA,IAAI;AAFE,WAAD,CAAT;;AATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAAUhB,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMI,UAAU,CAACM,iBAAD,EAAoBX,WAApB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAME,GAAG,CAAC,CACND,IAAI,CAACJ,YAAD,CADE,EAENI,IAAI,CAACF,gBAAD,CAFE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { fork, all, takeLatest, call, put } from 'redux-saga/effects'\r\nimport axios from 'axios'\r\n\r\nimport { POST_POSTS_FAILURE, POST_POSTS_SUCCESS, GET_POSTS_REQUEST, GET_POSTS_SUCCESS, GET_POSTS_FAILURE, POST_POSTS_REQUEST } from '../reducers/post/postAction'\r\n\r\n\r\nfunction* posting() {\r\n    try {\r\n        const result = false //api\r\n        yield put({\r\n            type: POST_POSTS_SUCCESS,\r\n            data: result\r\n        })\r\n    } catch (e) {\r\n        console.error(e)\r\n        yield put({\r\n            type: POST_POSTS_FAILURE,\r\n            data: e\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchPosting() {\r\n    yield takeLatest(POST_POSTS_REQUEST, posting)\r\n}\r\n\r\nconst dummy = [\r\n    {\r\n        \"id\": 1,\r\n        \"title\": \"친구 생일선물로 지갑 어떤가요?\",\r\n        \"content\": \"친구 생일선물로 40만원짜리 지갑 선물해려하는데요.\\r\\n남자 지갑 브랜드 추천해주세요\",\r\n        \"tags\": [\r\n            \"20대\",\r\n            \"남자\",\r\n            \"지갑\",\r\n            \"친구\",\r\n            \"생일\"\r\n        ]\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"title\": \"취업기념 부모님 선물\",\r\n        \"content\": \"이번에 취업해서 첫월급을 받았습니다. 첫월급인만큼 부모님께 통크게 선물하나 해드릴까하는데요.\\r\\n200만원짜리 안마의자가 좋을까요? 아니면 다른 추천하시는게 있나요?\",\r\n        \"tags\": [\r\n            \"부모님\",\r\n            \" 취업\",\r\n            \" 선물\",\r\n            \" 안마의자\"\r\n        ]\r\n    }\r\n]\r\n\r\nfunction* getPostList() {\r\n    try {\r\n        const result = false //api\r\n        yield put({\r\n            type: GET_POSTS_SUCCESS,\r\n            data: dummy\r\n        })\r\n    } catch (e) {\r\n        console.error(e)\r\n        yield put({\r\n            type: GET_POSTS_FAILURE,\r\n            data: e\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchGetPostList() {\r\n    yield takeLatest(GET_POSTS_REQUEST, getPostList)\r\n}\r\n\r\nexport default function* rootPost() {\r\n    yield all([\r\n        fork(watchPosting),\r\n        fork(watchGetPostList)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}