{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seeke\\\\8ton14_front\\\\pages\\\\community\\\\[id].js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GET_POST_REQUEST } from '../../reducers/post/postAction';\n\nconst Detail = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    post\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    dispatch({\n      type: GET_POST_REQUEST,\n      data: router.query.id\n    });\n  }, []);\n  return __jsx(React.Fragment, null, post ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, post.title), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, post.content), post.tags && post.tags.map(item => {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, item);\n  }), post.comments && post.comments.map(item => {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, item.content), __jsx(\"div\", {\n      className: \"like\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"\\uC88B\\uC544\\uC694 \\uC218 : \", item.likes));\n  })) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"404 not found \"));\n};\n\nexport default Detail;","map":{"version":3,"sources":["C:/Users/seeke/8ton14_front/pages/community/[id].js"],"names":["React","useEffect","useRouter","useDispatch","useSelector","GET_POST_REQUEST","Detail","router","dispatch","post","state","type","data","query","id","title","content","tags","map","item","comments","likes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,QAAiC,gCAAjC;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAMM,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAWL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAA5B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEN,gBADD;AAELO,MAAAA,IAAI,EAAEL,MAAM,CAACM,KAAP,CAAaC;AAFd,KAAD,CAAR;AAIH,GALQ,EAKN,EALM,CAAT;AAQA,SACI,4BAEQL,IAAI,GAEA,4BACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,IAAI,CAACM,KAA7B,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMN,IAAI,CAACO,OAAX,CAFJ,EAGKP,IAAI,CAACQ,IAAL,IAAaR,IAAI,CAACQ,IAAL,CAAUC,GAAV,CAAcC,IAAI,IAAI;AAChC,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,IAAN,CAAR;AACH,GAFa,CAHlB,EAMKV,IAAI,CAACW,QAAL,IAAiBX,IAAI,CAACW,QAAL,CAAcF,GAAd,CAAkBC,IAAI,IAAI;AACxC,WACI,4BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BA,IAAI,CAACH,OAA/B,CADJ,EAEI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAA+BG,IAAI,CAACE,KAApC,CAFJ,CADJ;AAMH,GAPiB,CANtB,CAFA,GAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBApBZ,CADJ;AA2BH,CAxCD;;AA0CA,eAAef,MAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useRouter } from 'next/router'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { GET_POST_REQUEST } from '../../reducers/post/postAction'\r\n\r\nconst Detail = () => {\r\n    const router = useRouter()\r\n    const dispatch = useDispatch()\r\n    const { post } = useSelector(state => state.post)\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: GET_POST_REQUEST,\r\n            data: router.query.id\r\n        })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                post\r\n                    ?\r\n                    <>\r\n                        <div className=\"title\">{post.title}</div>\r\n                        <div>{post.content}</div>\r\n                        {post.tags && post.tags.map(item => {\r\n                            return (<div>{item}</div>)\r\n                        })}\r\n                        {post.comments && post.comments.map(item => {\r\n                            return (\r\n                                <>\r\n                                    <div className=\"comment\">{item.content}</div>\r\n                                    <div className=\"like\">좋아요 수 : {item.likes}</div>\r\n                                </>\r\n                            )\r\n                        })}\r\n                    </>\r\n                    :\r\n                    <div>404 not found </div>\r\n            }\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Detail"]},"metadata":{},"sourceType":"module"}