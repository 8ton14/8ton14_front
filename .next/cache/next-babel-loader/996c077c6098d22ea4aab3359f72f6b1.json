{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(posting),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchPosting),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getPostList),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchGetPostList),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getPost),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchGetPost),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootPost);\n\nimport { fork, all, takeLatest, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { POST_POSTS_FAILURE, POST_POSTS_SUCCESS, GET_POSTS_REQUEST, GET_POSTS_SUCCESS, GET_POSTS_FAILURE, POST_POSTS_REQUEST, GET_POST_SUCCESS, GET_POST_FAILURE, GET_POST_REQUEST } from '../reducers/post/postAction';\n\nfunction postingAPI(data) {\n  return axios.post('https://stopgomin-backend.herokuapp.com/api/writePost', _JSON$stringify(data));\n}\n\nfunction posting(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function posting$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(postingAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: POST_POSTS_SUCCESS,\n            data: result\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: POST_POSTS_FAILURE,\n            data: _context.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchPosting() {\n  return _regeneratorRuntime.wrap(function watchPosting$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(POST_POSTS_REQUEST, posting);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nvar dummy = [{\n  \"id\": 1,\n  \"title\": \"친구 생일선물로 지갑 어떤가요?\",\n  \"content\": \"친구 생일선물로 40만원짜리 지갑 선물해려하는데요.\\r\\n남자 지갑 브랜드 추천해주세요\",\n  \"tags\": [\"20대\", \"남자\", \"지갑\", \"친구\", \"생일\"]\n}, {\n  \"id\": 2,\n  \"title\": \"취업기념 부모님 선물\",\n  \"content\": \"이번에 취업해서 첫월급을 받았습니다. 첫월급인만큼 부모님께 통크게 선물하나 해드릴까하는데요.\\r\\n200만원짜리 안마의자가 좋을까요? 아니면 다른 추천하시는게 있나요?\",\n  \"tags\": [\"부모님\", \" 취업\", \" 선물\", \" 안마의자\"]\n}];\n\nfunction getPostAPI() {\n  return axios.get('https://stopgomin-backend.herokuapp.com/api/getPosts');\n}\n\nfunction getPostList() {\n  var result;\n  return _regeneratorRuntime.wrap(function getPostList$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(getPostAPI);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: GET_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 13;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 13;\n          return put({\n            type: GET_POSTS_FAILURE,\n            data: _context3.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction watchGetPostList() {\n  return _regeneratorRuntime.wrap(function watchGetPostList$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(GET_POSTS_REQUEST, getPostList);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction getPost() {\n  var result;\n  return _regeneratorRuntime.wrap(function getPost$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          result = false; //api\n\n          _context5.next = 4;\n          return put({\n            type: GET_POST_SUCCESS,\n            data: result\n          });\n\n        case 4:\n          _context5.next = 11;\n          break;\n\n        case 6:\n          _context5.prev = 6;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(_context5.t0);\n          _context5.next = 11;\n          return put({\n            type: GET_POST_FAILURE,\n            data: _context5.t0\n          });\n\n        case 11:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 6]]);\n}\n\nfunction watchGetPost() {\n  return _regeneratorRuntime.wrap(function watchGetPost$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(GET_POST_REQUEST, getPost);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nexport default function rootPost() {\n  return _regeneratorRuntime.wrap(function rootPost$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([fork(watchPosting), fork(watchGetPostList), fork(watchGetPost)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["D:/webdev/8ton14_front/sagas/post.js"],"names":["posting","watchPosting","getPostList","watchGetPostList","getPost","watchGetPost","rootPost","fork","all","takeLatest","call","put","axios","POST_POSTS_FAILURE","POST_POSTS_SUCCESS","GET_POSTS_REQUEST","GET_POSTS_SUCCESS","GET_POSTS_FAILURE","POST_POSTS_REQUEST","GET_POST_SUCCESS","GET_POST_FAILURE","GET_POST_REQUEST","postingAPI","data","post","action","result","type","console","error","dummy","getPostAPI","get"],"mappings":"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","sourcesContent":["import { fork, all, takeLatest, call, put } from 'redux-saga/effects'\r\nimport axios from 'axios'\r\n\r\nimport { POST_POSTS_FAILURE, POST_POSTS_SUCCESS, GET_POSTS_REQUEST, GET_POSTS_SUCCESS, GET_POSTS_FAILURE, POST_POSTS_REQUEST, GET_POST_SUCCESS, GET_POST_FAILURE, GET_POST_REQUEST } from '../reducers/post/postAction'\r\n\r\nfunction postingAPI(data) {\r\n    return axios.post('https://stopgomin-backend.herokuapp.com/api/writePost', JSON.stringify(data))\r\n}\r\n\r\n\r\nfunction* posting(action) {\r\n    try {\r\n        const result = yield call(postingAPI, action.data) //api\r\n        yield put({\r\n            type: POST_POSTS_SUCCESS,\r\n            data: result\r\n        })\r\n    } catch (e) {\r\n        console.error(e)\r\n        yield put({\r\n            type: POST_POSTS_FAILURE,\r\n            data: e\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchPosting() {\r\n    yield takeLatest(POST_POSTS_REQUEST, posting)\r\n}\r\n\r\nconst dummy = [\r\n    {\r\n        \"id\": 1,\r\n        \"title\": \"친구 생일선물로 지갑 어떤가요?\",\r\n        \"content\": \"친구 생일선물로 40만원짜리 지갑 선물해려하는데요.\\r\\n남자 지갑 브랜드 추천해주세요\",\r\n        \"tags\": [\r\n            \"20대\",\r\n            \"남자\",\r\n            \"지갑\",\r\n            \"친구\",\r\n            \"생일\"\r\n        ]\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"title\": \"취업기념 부모님 선물\",\r\n        \"content\": \"이번에 취업해서 첫월급을 받았습니다. 첫월급인만큼 부모님께 통크게 선물하나 해드릴까하는데요.\\r\\n200만원짜리 안마의자가 좋을까요? 아니면 다른 추천하시는게 있나요?\",\r\n        \"tags\": [\r\n            \"부모님\",\r\n            \" 취업\",\r\n            \" 선물\",\r\n            \" 안마의자\"\r\n        ]\r\n    }\r\n]\r\n\r\nfunction getPostAPI() {\r\n    return axios.get('https://stopgomin-backend.herokuapp.com/api/getPosts')\r\n}\r\n\r\nfunction* getPostList() {\r\n    try {\r\n        const result = yield call(getPostAPI) //api\r\n        yield put({\r\n            type: GET_POSTS_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch (e) {\r\n        console.error(e)\r\n        yield put({\r\n            type: GET_POSTS_FAILURE,\r\n            data: e\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchGetPostList() {\r\n    yield takeLatest(GET_POSTS_REQUEST, getPostList)\r\n}\r\n\r\nfunction* getPost() {\r\n    try {\r\n        const result = false //api\r\n        yield put({\r\n            type: GET_POST_SUCCESS,\r\n            data: result\r\n        })\r\n\r\n    } catch (e) {\r\n        console.error(e)\r\n        yield put({\r\n            type: GET_POST_FAILURE,\r\n            data: e\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchGetPost() {\r\n    yield takeLatest(GET_POST_REQUEST, getPost)\r\n}\r\n\r\nexport default function* rootPost() {\r\n    yield all([\r\n        fork(watchPosting),\r\n        fork(watchGetPostList),\r\n        fork(watchGetPost)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}