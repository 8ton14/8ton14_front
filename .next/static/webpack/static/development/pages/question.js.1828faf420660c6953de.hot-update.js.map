{"version":3,"file":"static/webpack/static\\development\\pages\\question.js.1828faf420660c6953de.hot-update.js","sources":["webpack:///./Components/Form/QuestionForm.js","webpack:///./Components/RecommendItem.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Row, Col, Button, ToggleButtonGroup, ToggleButton, Container } from 'react-bootstrap'\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Link from 'next/link'\r\n\r\nimport './QuestionForm.scss'\r\nimport { POST_RECOMMEND_PRODUCT_REQUEST } from '../../reducers/product/productAction';\r\nimport RecommendItem from '../RecommendItem'\r\n\r\n\r\nfunction valuetext(value) {\r\n    return `${value}만원`;\r\n}\r\n\r\n\r\nconst QuestionForm = () => {\r\n    const [sex, setSex] = useState('남자')\r\n    const [age, setAge] = useState('10대')\r\n    const [job, setJob] = useState('')\r\n    const [favor, setFavor] = useState([])\r\n    const [price, setPrice] = useState([0, 100])\r\n    const [validate, setValidate] = useState(false)\r\n\r\n    const { isSuccess } = useSelector(state => state.product)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setPrice(newValue);\r\n    };\r\n\r\n    const onChangeSex = (e) => {\r\n        setSex(e.target.value)\r\n    }\r\n\r\n    const onChangeAge = (e) => {\r\n        setAge(e.target.value)\r\n    }\r\n\r\n    const onChangeJob = (e) => {\r\n        setJob(e.target.value)\r\n    }\r\n\r\n    const onChangeFavorGroup = (values) => {\r\n        setFavor(values)\r\n    }\r\n\r\n    const onSubmitForm = (e) => {\r\n        const form = e.current.target\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault()\r\n            e.stopPagination()\r\n        }\r\n        setValidate(true)\r\n        dispatch({\r\n            type: POST_RECOMMEND_PRODUCT_REQUEST,\r\n            data: {\r\n                sex,\r\n                age,\r\n                job,\r\n                favor,\r\n                price\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            {isSuccess ?\r\n                <RecommendItem />\r\n                :\r\n\r\n                <Form novalidate validated={validate} onSubmit={onSubmitForm}>\r\n                    <Form.Group>\r\n                        <Row>\r\n                            <Col>\r\n                                <Typography gutterBottom>가격대</Typography>\r\n                                <Slider\r\n                                    value={price}\r\n                                    onChange={handleChange}\r\n                                    valueLabelDisplay=\"auto\"\r\n                                    aria-labelledby=\"range-slider\"\r\n                                    getAriaValueText={valuetext}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Row>\r\n                            <Form.Label>\r\n                                성별\r\n                    </Form.Label>\r\n                            <Col>\r\n                                <Form.Control as=\"select\" value={sex} onChange={onChangeSex} required>\r\n                                    <option>남자</option>\r\n                                    <option>여자</option>\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Row>\r\n                            <Form.Label>\r\n                                나이대\r\n                    </Form.Label>\r\n                            <Col>\r\n                                <Form.Control as=\"select\" value={age} onChange={onChangeAge} required>\r\n                                    <option>10대</option>\r\n                                    <option>20대</option>\r\n                                    <option>30대</option>\r\n                                    <option>40대</option>\r\n                                    <option>50대이상</option>\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Row>\r\n                            <Form.Label>\r\n                                직업\r\n                    </Form.Label>\r\n                            <Col>\r\n                                <Col>\r\n                                    <Form.Control as=\"select\" value={job} onChange={onChangeJob} required>\r\n                                        <option>청소년</option>\r\n                                        <option>대학생</option>\r\n                                        <option>취준생</option>\r\n                                        <option>직장인</option>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Row>\r\n                            <Form.Label>\r\n                                관심사\r\n                    </Form.Label>\r\n                            <Col>\r\n                                <ToggleButtonGroup type=\"checkbox\" defaultValue={favor} onChange={onChangeFavorGroup}>\r\n                                    <ToggleButton value=\"exercise\">운동</ToggleButton>\r\n                                    <ToggleButton value=\"beauty\">미용</ToggleButton>\r\n                                    <ToggleButton value=\"healthcare\">건강</ToggleButton>\r\n                                    <ToggleButton value=\"game\">게임</ToggleButton>\r\n                                    <ToggleButton value=\"it\">IT</ToggleButton>\r\n                                    <ToggleButton value=\"fashion\">패션</ToggleButton>\r\n                                </ToggleButtonGroup>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form.Group>\r\n                    <Button type=\"submit\">\r\n                        추천!\r\n            </Button>\r\n                </Form>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default QuestionForm\r\n","import React from 'react'\r\nimport { Accordion } from 'react-bootstrap'\r\n\r\n\r\nconst RecommendItem = () => {\r\n\r\n\r\n\r\n    return (\r\n        <Accordion defaultActiveKey=\"0\">\r\n            <Card>\r\n                <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                        Click me!\r\n      </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>Hello! I'm the body</Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n            <Card>\r\n                <Card.Header>\r\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                        Click me!\r\n      </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"1\">\r\n                    <Card.Body>Hello! I'm another body</Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n        </Accordion>\r\n    )\r\n}\r\n\r\nexport default RecommendItem"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAQA;AAAA;AARA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;ACrKA;AACA;AACA;AAEA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}