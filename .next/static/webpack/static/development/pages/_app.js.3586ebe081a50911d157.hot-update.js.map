{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.3586ebe081a50911d157.hot-update.js","sources":["webpack:///./reducers/comment/commentAction.js","webpack:///./sagas/comment.js","webpack:///./sagas/index.js","webpack:///./sagas/product.js"],"sourcesContent":["export const GET_COMMENT_REQUEST = \"GET_COMMENT_REQUEST\"\r\nexport const GET_COMMENT_FAILURE = \"GET_COMMENT_FAILURE\"\r\nexport const GET_COMMENT_SUCCESS = \"GET_COMMENT_SUCCESS\"\r\n\r\nexport const POST_COMMENT_REQUEST = \"POST_COMMENT_REQUEST\"\r\nexport const POST_COMMENT_FAILURE = \"POST_COMMENT_FAILURE\"\r\nexport const POST_COMMENT_SUCCESS = \"POST_COMMENT_SUCCESS\"\r\n","import { fork, all, takeLatest, call, put } from 'redux-saga/effects'\r\nimport axios from 'axios'\r\n\r\nimport { } from '../reducers/post/postAction'\r\nimport { POST_RECOMMEND_PRODUCT_REQUEST, POST_RECOMMEND_PRODUCT_FAILURE, POST_RECOMMEND_PRODUCT_SUCCESS } from '../reducers/product/productAction'\r\nimport { POST_COMMENT_FAILURE } from '../reducers/comment/commentAction'\r\n\r\n\r\nfunction recommendAPI() {\r\n\r\n}\r\n\r\nfunction* commenting() {\r\n    try {\r\n        const result = false //api\r\n        put({\r\n            type: POST_COMMENT_SUCCESS,\r\n            data: result\r\n        })\r\n    } catch (e) {\r\n        console.error(e)\r\n        put({\r\n            type: POST_COMMENT_FAILURE,\r\n            data: e\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchCommenting() {\r\n    yield takeLatest(POST_COMMENT_REQUEST, commenting)\r\n}\r\n\r\nexport default function* rootComment() {\r\n    yield all([\r\n        watchCommenting,\r\n    ])\r\n}","import { all, fork } from 'redux-saga/effects'\r\nimport axios from 'axios'\r\n\r\nimport post from './post'\r\nimport product from './product'\r\nimport comment from './comment'\r\n\r\naxios.defaults.baseURL = 'http://127.0.0.1.:8000'\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fork(post),\r\n        fork(comment),\r\n        fork(product)\r\n    ])\r\n}","import { fork, all, takeLatest, call, put } from 'redux-saga/effects'\r\nimport axios from 'axios'\r\n\r\nimport { } from '../reducers/post/postAction'\r\nimport { POST_RECOMMEND_PRODUCT_REQUEST, POST_RECOMMEND_PRODUCT_FAILURE, POST_RECOMMEND_PRODUCT_SUCCESS } from '../reducers/product/productAction'\r\n\r\n\r\nfunction recommendAPI() {\r\n\r\n}\r\n\r\nfunction* recommending() {\r\n    try {\r\n        const result = false //api\r\n        put({\r\n            type: POST_RECOMMEND_PRODUCT_SUCCESS,\r\n            data: result\r\n        })\r\n    } catch (e) {\r\n        console.error(e)\r\n        put({\r\n            type: POST_RECOMMEND_PRODUCT_FAILURE,\r\n            data: e\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchProduct() {\r\n    yield takeLatest(POST_RECOMMEND_PRODUCT_REQUEST, recommending)\r\n}\r\n\r\nexport default function* rootProduct() {\r\n    yield all([\r\n        watchProduct,\r\n    ])\r\n}"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACMA;;;AAgBA;;;AAIA;AACA;AAjCA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AAVA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACEA;;;AAgBA;;;AAIA;AACA;AAhCA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}